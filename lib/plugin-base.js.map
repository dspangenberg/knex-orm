{"version":3,"sources":["../src/plugin-base.js"],"names":["PluginBase","options","defaultOptions","beforeQuery","afterQuery","BaseModel","qb","res"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;IAGqBA,U;AACnB;;;;;;;;AAQA,wBAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;;AACxB,QAAMC,iBAAiB;AACrBC,mBAAa,IADQ;AAErBC,kBAAY;AAFS,KAAvB;;AAKA,SAAKH,OAAL,GAAe,sBAAcC,cAAd,EAA8BD,OAA9B,CAAf;AACD;;AAED;;;;;;AAMA;;;;;yBACKI,S,EAAW;AAAE,aAAO,IAAP;AAAc;;AAEhC;;;;;;;;gCAKYC,E,EAAI;AAAE,aAAOA,EAAP;AAAY;;AAE9B;;;;;;;;;+BAMWC,G,EAAK;AAAE,aAAOA,GAAP;AAAa;;;;;kBAxCZP,U","file":"plugin-base.js","sourcesContent":["/**\n * A base class for Plugins.\n */\nexport default class PluginBase {\n  /**\n   * Creates a new plugin instance with the given options.\n   * @param {Object} [options] Options to be used for the plugin.\n   * @param {boolean} [options.beforeQuery=true] Set to false to disable the\n   * execution of the 'beforeQuery' function.\n   * @param {boolean} [options.afterQuery=true] Set to false to disable the\n   * execution of the 'afterQuery' function.\n   */\n  constructor(options = {}) {\n    const defaultOptions = {\n      beforeQuery: true,\n      afterQuery: true,\n    };\n\n    this.options = Object.assign(defaultOptions, options);\n  }\n\n  /**\n   * Initializes the plugin.\n   * @param {ModelBase} BaseModel Base Model class of the plugin's corresponding\n   * ORM instance.\n   * @returns {PluginBase} The current plugin after initialization.\n   */\n  /* eslint-disable no-unused-vars */\n  init(BaseModel) { return this; }\n\n  /**\n   * A function which triggers before query execution.\n   * @param {QueryBuilder} qb QueryBuilder which corresponds to the query.\n   * @returns {QueryBuilder} The modified QueryBuilder instance.\n   */\n  beforeQuery(qb) { return qb; }\n\n  /**\n   * A function which triggers after query execution, but before returning a\n   * response object.\n   * @param {Object} res Response object which can be modified.\n   * @returns {Object} The modified response object.\n   */\n  afterQuery(res) { return res; }\n}\n"]}