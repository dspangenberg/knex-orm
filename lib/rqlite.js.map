{"version":3,"sources":["../src/rqlite.js"],"names":["rqliteAdapter","connectionString","api","knex","Knex","client","debug","useNullAsDefault","employees","employee","sql","insert","console","log","toString","employeesSql","schema","createTable","table","increments","primary","timestamps","integer","unsigned","references","string","notNullable","date","companySql","unique","lowerSql","toLowerCase","startsWith","update","delete","create","drop","select","connect","method","getMethod","res","results","body","error","reject","data","resolve"],"mappings":"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","file":"rqlite.js","sourcesContent":["import { getError, toPlainJs } from 'rqlite-js/lib/api/results';\n\nimport Knex from 'knex'\nimport connect from 'rqlite-js/lib/api/data/client';\nimport employees from '../db/seeds/employees'\n\nexport default class rqliteAdapter {\n\n  static get connectionString() {\n    return this.connectionString;\n  }\n\n  static set connectionString(connectionString) {\n    this.connectionString = connectionString;\n  }\n\n  static async connect(connectionString) {\n    this.api = await connect(connectionString);\n  }\n\n\n  static async seeds() {\n\n    const knex = new Knex({\n      client: 'sqlite3',\n      debug: true,\n      useNullAsDefault: true,\n    });\n\n    for (const employee of employees) {\n      const sql = knex('employees').insert(employee)\n      console.log(sql.toString())\n    }\n  }\n\n  static async migrations() {\n\n    const knex = new Knex({\n      client: 'sqlite3',\n      debug: true,\n      useNullAsDefault: true,\n    });\n\n    const employeesSql = knex.schema.createTable('employees', (table) => {\n      table.increments().primary();\n      table.timestamps();\n\n      table.integer('company_id').unsigned().references('companies.rank');\n\n      table.string('name').notNullable();\n      table.date('birth_date').notNullable();\n      table.integer('zip_code').unsigned();\n    })\n    console.log(employeesSql.toString());\n    const companySql = knex.schema.createTable('companies', (table) => {\n      table.increments('rank').primary();\n\n      table.string('name').notNullable();\n      table.string('email').unique();\n    });\n    console.log(companySql.toString());\n  }\n\n  static getMethod(sql) {\n    const api = this.api;\n    const lowerSql = sql.toLowerCase();\n    if (lowerSql.startsWith('insert')) {\n      return api.insert;\n    }\n    if (lowerSql.startsWith('update')) {\n      return api.update;\n    }\n    if (lowerSql.startsWith('delete')) {\n      return api.delete;\n    }\n    if (lowerSql.startsWith('create')) {\n      return api.table.create;\n    }\n    if (lowerSql.startsWith('drop')) {\n      return api.table.drop;\n    }\n    return api.select;\n  }\n\n  static async exec(connectionString, sql) {\n    console.log(sql)\n    await this.connect(connectionString);\n    const method = this.getMethod(sql);\n    try {\n      const res = await method(sql);\n      const results = res.body.results;\n      const error = getError(results);\n      if (error) {\n        return Promise.reject(error);\n      }\n      const data = toPlainJs(results);\n      return Promise.resolve(data);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n"]}