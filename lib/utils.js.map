{"version":3,"sources":["../src/utils.js"],"names":["flattenArray","modelize","value","concat","apply","obj","Model","Array","isArray","map","item","Object"],"mappings":";;;;;QAAgBA,Y,GAAAA,Y;QAIAC,Q,GAAAA,Q;AAJT,SAASD,YAAT,CAAsBE,KAAtB,EAA6B;AAClC,SAAO,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBF,KAApB,CAAP;AACD;;AAEM,SAASD,QAAT,CAAkBI,GAAlB,EAAuBC,KAAvB,EAA8B;AACnC;AACA,MAAIC,MAAMC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACtB,WAAOA,IAAII,GAAJ,CAAQ,UAACC,IAAD;AAAA,aAAUT,SAASS,IAAT,EAAeJ,KAAf,CAAV;AAAA,KAAR,CAAP;AACD;;AAED;AACA,SAAOD,eAAeM,MAAf,GAAwB,IAAIL,KAAJ,CAAUD,GAAV,EAAe,KAAf,CAAxB,GAAgDA,GAAvD;AACD","file":"utils.js","sourcesContent":["export function flattenArray(value) {\n  return [].concat.apply([], value);\n}\n\nexport function modelize(obj, Model) {\n  // Support recursive array transformation\n  if (Array.isArray(obj)) {\n    return obj.map((item) => modelize(item, Model));\n  }\n\n  // Don't modelize non-objects\n  return obj instanceof Object ? new Model(obj, false) : obj;\n}\n"]}